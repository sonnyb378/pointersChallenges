Challenge 7: Reverse a Linked List Using Pointers
Description: Write a Go function that reverses a singly linked list using pointers.

Input:
1 -> 2 -> 3 -> 4 -> 5

Output:
5 -> 4 -> 3 -> 2 -> 1

Incorrect Output:
1 -> 2 -> 3 -> 4 -> 5

Challenge 8: Implement a Linked List with Pointers
Description: Implement a singly linked list from scratch in Go with functions to add, delete, and search for elements using pointers.

**Input and Output: Varies based on operations performed on the linked list.

Incorrect Output:
The linked list is not properly implemented.

Challenge 9: Swap Nodes in a Binary Tree Using Pointers
Description: Write a Go function that swaps two nodes in a binary tree using pointers.

Input:
    1
   / \
  2   3
 / \
4   5
Swap nodes 2 and 3.

Output:
    1
   / \
  3   2
     / \
    4   5

Incorrect Output:
    1
   / \
  2   3
 / \
4   5